import discord
from discord.ext import commands
from discord import app_commands
import random
import settings
import database


class Utils(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.task_list_message_id = None

    async def send_startup_greeting(self):
        Greetings = ["–Ø –∂–∏–≤!", "–ü—Ä–∏–≤–µ—Ç, –±–∞–Ω–¥–∏—Ç—ã", "–°–Ω–æ–≤–∞ –≤ —Å—Ç—Ä–æ—é!", "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"]

        if settings.CHANNEL_ID:
            channel = self.bot.get_channel(settings.CHANNEL_ID)
            if channel:
                try:
                    await channel.send(random.choice(Greetings))
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∫–∞–Ω–∞–ª {channel.name} ({settings.CHANNEL_ID})")
                except discord.Forbidden:
                    print(f"–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {channel.name} ({settings.CHANNEL_ID})")
                except discord.HTTPException as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")
            else:
                print(f"–ö–∞–Ω–∞–ª —Å ID {settings.CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.")
        else:
            print("CHANNEL_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ settings.py, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

    async def get_or_create_task_list_message(self):
        """
        –ò—â–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–µ.
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è.
        """
        if not settings.CHANNEL_ID:
            print("CHANNEL_ID –Ω–µ —É–∫–∞–∑–∞–Ω, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á –Ω–µ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.")
            return

        channel = self.bot.get_channel(settings.CHANNEL_ID)
        if not channel:
            print(f"–ö–∞–Ω–∞–ª —Å ID {settings.CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á.")
            return

        try:
            async for message in channel.history(limit=100):
                # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:"
                if message.author == self.bot.user and message.content.startswith("üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:"):
                    self.task_list_message_id = message.id
                    print(f"–ù–∞–π–¥–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {self.task_list_message_id}")
                    await self.update_active_tasks_message()  # –û–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å—Ä–∞–∑—É
                    return
        except discord.Forbidden:
            print(f"–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ {channel.name} ({settings.CHANNEL_ID})")
            return
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {e}")
            return

        try:
            sent_message = await channel.send("üìã –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏: –ó–∞–≥—Ä—É–∑–∫–∞...")
            self.task_list_message_id = sent_message.id
            print(f"–°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {self.task_list_message_id}")
            await self.update_active_tasks_message()  # –û–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å—Ä–∞–∑—É
        except discord.Forbidden:
            print(f"–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {channel.name} ({settings.CHANNEL_ID})")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {e}")

    async def update_active_tasks_message(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á (todo –∏ assigned)."""
        if not self.task_list_message_id or not settings.CHANNEL_ID:
            return

        channel = self.bot.get_channel(settings.CHANNEL_ID)
        if not channel:
            print(f"–ö–∞–Ω–∞–ª —Å ID {settings.CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á.")
            return

        try:
            message_to_edit = await channel.fetch_message(self.task_list_message_id)
            tasks = database.get_active_tasks()  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏

            task_list_content = "üìã **–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏:** üìã\n\n"
            if not tasks:
                task_list_content += "–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç."
            else:
                for key, text, author_id, assigned_to_id, status in tasks:
                    author_member = channel.guild.get_member(author_id)
                    author_name = author_member.display_name if author_member else f"ID: {author_id}"

                    status_emoji = ""
                    if status == 'todo':
                        status_emoji = "‚ö™"
                    elif status == 'assigned':
                        status_emoji = "üü†"

                    assigned_text = ""
                    if assigned_to_id:
                        assigned_member = channel.guild.get_member(assigned_to_id)
                        assigned_name = assigned_member.display_name if assigned_member else f"ID: {assigned_to_id}"
                        assigned_text = f" -> {assigned_name}"

                    task_list_content += f"{status_emoji} **`{key}`**: {text} (–ê–≤—Ç–æ—Ä: {author_name}{assigned_text})\n"

            if len(task_list_content) > 2000:
                task_list_content = task_list_content[:1950] + "\n...(—Å–ø–∏—Å–æ–∫ —É—Ä–µ–∑–∞–Ω)"

            await message_to_edit.edit(content=task_list_content)
            print("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        except discord.NotFound:
            print(
                f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —Å ID {self.task_list_message_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ.")
            self.task_list_message_id = None
            await self.get_or_create_task_list_message()
        except discord.Forbidden:
            print(
                f"–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {self.task_list_message_id} –≤ –∫–∞–Ω–∞–ª–µ {channel.name} ({settings.CHANNEL_ID})")
        except discord.HTTPException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {e}")

    @app_commands.command(name="ping", description="–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –±–æ—Ç–∞")
    async def ping(self, interaction: discord.Interaction):
        latency_ms = round(self.bot.latency * 1000)
        await interaction.response.send_message(f"Pong! –ó–∞–¥–µ—Ä–∂–∫–∞: {latency_ms}ms")
        print(f"–ö–æ–º–∞–Ω–¥–∞ /ping –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.display_name}. –ó–∞–¥–µ—Ä–∂–∫–∞: {latency_ms}ms")


async def setup(bot):
    await bot.add_cog(Utils(bot))