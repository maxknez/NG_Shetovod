import discord
from discord.ext import commands
from discord import app_commands
import database


class Tasks(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    async def _update_task_list(self):
        utils_cog = self.bot.get_cog("Utils")
        if utils_cog:
            await utils_cog.update_active_tasks_message()  # –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        else:
            print("–û—à–∏–±–∫–∞: –ö–æ–≥ 'Utils' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á.")

    @app_commands.command(name="–¥–æ–±–∞–≤–∏—Ç—å", description="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É —Å –∫–ª—é—á–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º")
    @app_commands.describe(key="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∑–∞–¥–∞—á–∏", task_text="–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏")
    async def add_task_command(self, interaction: discord.Interaction, key: str, task_text: str):
        author_id = interaction.user.id

        if len(key) > 50:
            await interaction.response.send_message(
                "–ö–ª—é—á –∑–∞–¥–∞—á–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤.", ephemeral=True)
            return

        if database.add_task(key.lower(), task_text, author_id):
            await interaction.response.send_message(
                f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` –∏ —Ç–µ–∫—Å—Ç–æ–º '{task_text}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å'!",
                ephemeral=True)
            await self._update_task_list()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
        else:
            await interaction.response.send_message(
                f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫–ª—é—á.", ephemeral=True)

    @app_commands.command(name="—É–¥–∞–ª–∏—Ç—å", description="–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ –∫–ª—é—á—É")
    @app_commands.describe(key="–ö–ª—é—á –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å")
    async def delete_task_command(self, interaction: discord.Interaction, key: str):
        task = database.get_task_by_key(key.lower())
        if not task:
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return

        # –†–∞–∑—Ä–µ—à–∞–µ–º —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        if task[
            3] == interaction.user.id or interaction.user.guild_permissions.manage_messages:  # task[3] —ç—Ç–æ author_id
            if database.delete_task_by_key(key.lower()):
                await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)
                await self._update_task_list()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
            else:
                await interaction.response.send_message(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É —Å –∫–ª—é—á–æ–º `{key}`.", ephemeral=True)
        else:
            await interaction.response.send_message(
                "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –∏ –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –¥–ª—è –µ—ë —É–¥–∞–ª–µ–Ω–∏—è.", ephemeral=True)

    @app_commands.command(name="–≤–∑—è—Ç—å", description="–í–∑—è—Ç—å –∑–∞–¥–∞—á—É, –ø—Ä–∏—Å–≤–æ–∏–≤ –µ—ë —Å–µ–±–µ.")
    @app_commands.describe(key="–ö–ª—é—á –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å.")
    async def assign_task_command(self, interaction: discord.Interaction, key: str):
        task = database.get_task_by_key(key.lower())
        if not task:
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return

        if task[5] == 'done':  # task[5] —ç—Ç–æ status
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", ephemeral=True)
            return

        if task[5] == 'assigned':
            assigned_member = interaction.guild.get_member(task[4])  # task[4] —ç—Ç–æ assigned_to_id
            assigned_name = assigned_member.display_name if assigned_member else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ {assigned_name}.",
                                                    ephemeral=True)
            return

        if database.assign_task(key.lower(), interaction.user.id):
            await interaction.response.send_message(f"–í—ã –≤–∑—è–ª–∏ –∑–∞–¥–∞—á—É —Å –∫–ª—é—á–æ–º `{key}`! –¢–µ–ø–µ—Ä—å –æ–Ω–∞ '–ù–∞–∑–Ω–∞—á–µ–Ω–∞' –≤–∞–º.",
                                                    ephemeral=True)
            await self._update_task_list()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
        else:
            await interaction.response.send_message(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤–∑—è—Ç—å –∑–∞–¥–∞—á—É —Å –∫–ª—é—á–æ–º `{key}`.", ephemeral=True)

    @app_commands.command(name="–∑–∞–∫—Ä—ã—Ç—å", description="–ó–∞–∫—Ä—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É, –ø–æ–ª—É—á–∏—Ç—å –æ—á–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞.")
    @app_commands.describe(key="–ö–ª—é—á –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å.")
    async def complete_task_command(self, interaction: discord.Interaction, key: str):
        task = database.get_task_by_key(key.lower())
        if not task:
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if task[4] != interaction.user.id:  # task[4] —ç—Ç–æ assigned_to_id
            await interaction.response.send_message(f"–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ '–ù–∞–∑–Ω–∞—á–µ–Ω—ã' –≤–∞–º.",
                                                    ephemeral=True)
            return

        if task[5] == 'done':  # task[5] —ç—Ç–æ status
            await interaction.response.send_message(f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É–∂–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", ephemeral=True)
            return

        if database.complete_task(key.lower(), interaction.user.id):
            database.add_rating_point(interaction.user.id)  # –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
            await interaction.response.send_message(
                f"–ó–∞–¥–∞—á–∞ —Å –∫–ª—é—á–æ–º `{key}` —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ 1 –æ—á–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞. üéâ", ephemeral=True)
            await self._update_task_list()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
        else:
            await interaction.response.send_message(
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É —Å –∫–ª—é—á–æ–º `{key}`. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –≤–∞–º –∏ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.",
                ephemeral=True)

    @app_commands.command(name="–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.")
    async def list_completed_tasks_command(self, interaction: discord.Interaction):
        tasks = database.get_tasks_by_status('done')

        if not tasks:
            await interaction.response.send_message("–°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø—É—Å—Ç.", ephemeral=True)
            return

        task_list_str = "‚úÖ **–°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:** ‚úÖ\n\n"
        for key, text, author_id, assigned_to_id, status in tasks:
            author_member = interaction.guild.get_member(author_id)
            author_name = author_member.display_name if author_member else f"ID: {author_id}"

            assigned_member = interaction.guild.get_member(assigned_to_id) if assigned_to_id else None
            assigned_name = assigned_member.display_name if assigned_member else "–ù–∏–∫–æ–º—É"

            task_list_str += f"**`{key}`**: {text} (–ê–≤—Ç–æ—Ä: {author_name}, –í—ã–ø–æ–ª–Ω–∏–ª: {assigned_name})\n"

        if len(task_list_str) > 2000:
            task_list_str = task_list_str[:1950] + "\n...(—Å–ø–∏—Å–æ–∫ —É—Ä–µ–∑–∞–Ω)"
            await interaction.response.send_message(
                "–°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –û—Ç–æ–±—Ä–∞–∂–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –∑–∞–¥–∞—á–∏.", ephemeral=True)
            await interaction.followup.send(task_list_str, ephemeral=True)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ followup
        else:
            await interaction.response.send_message(task_list_str, ephemeral=True)


async def setup(bot):
    await bot.add_cog(Tasks(bot))